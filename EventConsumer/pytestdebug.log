versions pytest-7.1.2, python-3.10.5.final.0
cwd=/Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer
args=('Tests/tests.py', '--debug')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x10e24b100>
    pytest_plugin_registered [hook]
        plugin: <Session EventConsumer exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x10e24b100>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x10f057190>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x10f057310>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x10e24b100>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/legacypath.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/python_path.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='UTF-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'ServicesCommunication.EventConsumer.Tests.conftest' from '/Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/Tests/conftest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session EventConsumer exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x10f057190>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x10f057310>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x10f057640>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x10f057820>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session EventConsumer exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x10e24b100>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/legacypath.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/python_path.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='UTF-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'ServicesCommunication.EventConsumer.Tests.conftest' from '/Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/Tests/conftest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session EventConsumer exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x10f057190>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x10f057310>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x10f057640>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x10f057820>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x10f056fb0>
          manager: <_pytest.config.PytestPluginManager object at 0x10d7c6950>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x10e24b100>
          start_path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer
          startdir: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer
      finish pytest_report_header --> [['rootdir: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer'], ['using: pytest-7.1.2']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session EventConsumer exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session EventConsumer exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['Tests/tests.py'] [collection]
        pytest_collectstart [hook]
            collector: <Session EventConsumer exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session EventConsumer exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument (PosixPath('/Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/Tests/tests.py'), []) [collection]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x10e24b100>
                collection_path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/Tests/__init__.py
                path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/Tests/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session EventConsumer exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/Tests/__init__.py
                path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/Tests/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session EventConsumer exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/Tests/__init__.py
                  path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/Tests/__init__.py
              finish pytest_pycollect_makemodule --> <Package Tests> [hook]
            finish pytest_collect_file --> [<Package Tests>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x10e24b100>
                collection_path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/__init__.py
                path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session EventConsumer exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/__init__.py
                path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session EventConsumer exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/__init__.py
                  path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/__init__.py
              finish pytest_pycollect_makemodule --> <Package EventConsumer> [hook]
            finish pytest_collect_file --> [<Package EventConsumer>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x10e24b100>
                collection_path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/__init__.py
                path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session EventConsumer exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/__init__.py
                path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session EventConsumer exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/__init__.py
                  path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/__init__.py
              finish pytest_pycollect_makemodule --> <Package ServicesCommunication> [hook]
            finish pytest_collect_file --> [<Package ServicesCommunication>] [hook]
            pytest_collect_file [hook]
                parent: <Package Tests>
                file_path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/Tests/tests.py
                path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/Tests/tests.py
              pytest_pycollect_makemodule [hook]
                  parent: <Package Tests>
                  module_path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/Tests/tests.py
                  path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/Tests/tests.py
              finish pytest_pycollect_makemodule --> <Module tests.py> [hook]
            finish pytest_collect_file --> [<Module tests.py>] [hook]
          matchnodes [<Module tests.py>] [] [collection]
            matchnodes finished ->  1 nodes [collection]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module tests.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests.py>
      find_module called for: ServicesCommunication.EventConsumer.Tests.tests [assertion]
      matched test file (was specified on cmdline): '/Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/Tests/tests.py' [assertion]
      found cached rewritten pyc for /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer/Tests/tests.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests.py>
            name: json
            obj: <module 'json' from '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/json/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests.py>
            name: test_correct_request
            obj: <function test_correct_request at 0x10f0af1c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x10f0a2560>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_correct_request>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests.py>
            name: test_incorrect_response
            obj: <function test_incorrect_response at 0x10f0af250>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x10f0a2740>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_incorrect_response>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests.py>
            name: test_incorrect_response_two
            obj: <function test_incorrect_response_two at 0x10f0af2e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x10f0a2650>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_incorrect_response_two>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'Tests/tests.py' lenresult=3 outcome='passed'> [hook]
    genitems <Function test_correct_request> [collection]
      pytest_itemcollected [hook]
          item: <Function test_correct_request>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_incorrect_response> [collection]
      pytest_itemcollected [hook]
          item: <Function test_incorrect_response>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_incorrect_response_two> [collection]
      pytest_itemcollected [hook]
          item: <Function test_incorrect_response_two>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'Tests/tests.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session EventConsumer exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x10e24b100>
          items: [<Function test_correct_request>, <Function test_incorrect_response>, <Function test_incorrect_response_two>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session EventConsumer exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x10e24b100>
            items: [<Function test_correct_request>, <Function test_incorrect_response>, <Function test_incorrect_response_two>]
            start_path: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer
            startdir: /Users/aurimasnausedas/Documents/Python/ServicesCommunication/EventConsumer
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session EventConsumer exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=3>
      pytest_runtest_protocol [hook]
          item: <Function test_correct_request>
          nextitem: <Function test_incorrect_response>
        pytest_runtest_logstart [hook]
            nodeid: Tests/tests.py::test_correct_request
            location: ('Tests/tests.py', 4, 'test_correct_request')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_correct_request>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='Tests'>
              request: <SubRequest 'app' for <Function test_correct_request>>
          finish pytest_fixture_setup --> <Flask 'ServicesCommunication.EventConsumer.main'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='Tests'>
              request: <SubRequest 'client' for <Function test_correct_request>>
          early skip of rewriting module: flask.testing [assertion]
          early skip of rewriting module: click.testing [assertion]
          finish pytest_fixture_setup --> <FlaskClient <Flask 'ServicesCommunication.EventConsumer.main'>> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_correct_request>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'Tests/tests.py::test_correct_request' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'Tests/tests.py::test_correct_request' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'Tests/tests.py::test_correct_request' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x10e24b100>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_correct_request>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_correct_request>
          early skip of rewriting module: encodings.idna [assertion]
          early skip of rewriting module: stringprep [assertion]
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_correct_request>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'Tests/tests.py::test_correct_request' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'Tests/tests.py::test_correct_request' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'Tests/tests.py::test_correct_request' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x10e24b100>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_correct_request>
            nextitem: <Function test_incorrect_response>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='Tests'>
              request: <SubRequest 'client' for <Function test_correct_request>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='Tests'>
              request: <SubRequest 'client' for <Function test_correct_request>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='Tests'>
              request: <SubRequest 'app' for <Function test_correct_request>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_correct_request>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'Tests/tests.py::test_correct_request' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'Tests/tests.py::test_correct_request' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'Tests/tests.py::test_correct_request' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x10e24b100>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: Tests/tests.py::test_correct_request
            location: ('Tests/tests.py', 4, 'test_correct_request')
        finish pytest_runtest_logfinish --> [] [hook]
        pytest_warning_recorded [hook]
            warning_message: {message : UserWarning('The session cookie domain is an IP address. This may not work as intended in some browsers. Add an entry to your hosts file, for example "localhost.localdomain", and use that instead.'), category : 'UserWarning', filename : '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/flask/sessions.py', lineno : 228, line : None}
            nodeid: Tests/tests.py::test_correct_request
            when: runtest
            location: None
        finish pytest_warning_recorded --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_incorrect_response>
          nextitem: <Function test_incorrect_response_two>
        pytest_runtest_logstart [hook]
            nodeid: Tests/tests.py::test_incorrect_response
            location: ('Tests/tests.py', 14, 'test_incorrect_response')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_incorrect_response>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='Tests'>
              request: <SubRequest 'app' for <Function test_incorrect_response>>
          finish pytest_fixture_setup --> <Flask 'ServicesCommunication.EventConsumer.main'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='Tests'>
              request: <SubRequest 'client' for <Function test_incorrect_response>>
          finish pytest_fixture_setup --> <FlaskClient <Flask 'ServicesCommunication.EventConsumer.main'>> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_incorrect_response>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'Tests/tests.py::test_incorrect_response' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'Tests/tests.py::test_incorrect_response' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'Tests/tests.py::test_incorrect_response' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x10e24b100>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_incorrect_response>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_incorrect_response>
            pytest_assertrepr_compare [hook]
                config: <_pytest.config.Config object at 0x10e24b100>
                op: ==
                left: {'error': "Validation error - {'event_payload': ['Not a valid string.']}"}
                right: {'error': "Validation error - {'event_payload': ['Not a valid string.'], 'event_type': ['Not a valid string.']}"}
            finish pytest_assertrepr_compare --> [['{\'error\': "Va...d string.\']}"} == {\'error\': "Va...d string.\']}"}', 'Differing items:', '{\'error\': "Validation error - {\'event_payload\': [\'Not a valid string.\']}"} != {\'error\': "Validation error - {\'event_payload\': [\'Not a valid string.\'], \'event_type\': [\'Not a valid string.\']}"}', 'Use -v to get more diff']] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_incorrect_response>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert {\'error\': "Va...d string.\']}"} == {\'error\': "Va...d string.\']}"}\n  Differing items:\n  {...\'event_payload\': [\'Not a valid string.\'], \'event_type\': [\'Not a valid string.\']}"}\n  Use -v to get more diff') tblen=25>>
        finish pytest_runtest_makereport --> <TestReport 'Tests/tests.py::test_incorrect_response' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'Tests/tests.py::test_incorrect_response' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'Tests/tests.py::test_incorrect_response' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0x10e24b100>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_incorrect_response>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert {\'error\': "Va...d string.\']}"} == {\'error\': "Va...d string.\']}"}\n  Differing items:\n  {...\'event_payload\': [\'Not a valid string.\'], \'event_type\': [\'Not a valid string.\']}"}\n  Use -v to get more diff') tblen=1>>
            report: <TestReport 'Tests/tests.py::test_incorrect_response' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_incorrect_response>
            nextitem: <Function test_incorrect_response_two>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='Tests'>
              request: <SubRequest 'client' for <Function test_incorrect_response>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='Tests'>
              request: <SubRequest 'client' for <Function test_incorrect_response>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='Tests'>
              request: <SubRequest 'app' for <Function test_incorrect_response>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_incorrect_response>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'Tests/tests.py::test_incorrect_response' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'Tests/tests.py::test_incorrect_response' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'Tests/tests.py::test_incorrect_response' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x10e24b100>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: Tests/tests.py::test_incorrect_response
            location: ('Tests/tests.py', 14, 'test_incorrect_response')
        finish pytest_runtest_logfinish --> [] [hook]
        pytest_warning_recorded [hook]
            warning_message: {message : UserWarning('The session cookie domain is an IP address. This may not work as intended in some browsers. Add an entry to your hosts file, for example "localhost.localdomain", and use that instead.'), category : 'UserWarning', filename : '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/flask/sessions.py', lineno : 228, line : None}
            nodeid: Tests/tests.py::test_incorrect_response
            when: runtest
            location: None
        finish pytest_warning_recorded --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_incorrect_response_two>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: Tests/tests.py::test_incorrect_response_two
            location: ('Tests/tests.py', 25, 'test_incorrect_response_two')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_incorrect_response_two>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='Tests'>
              request: <SubRequest 'app' for <Function test_incorrect_response_two>>
          finish pytest_fixture_setup --> <Flask 'ServicesCommunication.EventConsumer.main'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='Tests'>
              request: <SubRequest 'client' for <Function test_incorrect_response_two>>
          finish pytest_fixture_setup --> <FlaskClient <Flask 'ServicesCommunication.EventConsumer.main'>> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_incorrect_response_two>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'Tests/tests.py::test_incorrect_response_two' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'Tests/tests.py::test_incorrect_response_two' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'Tests/tests.py::test_incorrect_response_two' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x10e24b100>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_incorrect_response_two>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_incorrect_response_two>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_incorrect_response_two>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'Tests/tests.py::test_incorrect_response_two' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'Tests/tests.py::test_incorrect_response_two' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'Tests/tests.py::test_incorrect_response_two' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x10e24b100>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_incorrect_response_two>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='Tests'>
              request: <SubRequest 'client' for <Function test_incorrect_response_two>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='Tests'>
              request: <SubRequest 'client' for <Function test_incorrect_response_two>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='Tests'>
              request: <SubRequest 'app' for <Function test_incorrect_response_two>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_incorrect_response_two>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'Tests/tests.py::test_incorrect_response_two' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'Tests/tests.py::test_incorrect_response_two' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'Tests/tests.py::test_incorrect_response_two' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x10e24b100>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: Tests/tests.py::test_incorrect_response_two
            location: ('Tests/tests.py', 25, 'test_incorrect_response_two')
        finish pytest_runtest_logfinish --> [] [hook]
        pytest_warning_recorded [hook]
            warning_message: {message : UserWarning('The session cookie domain is an IP address. This may not work as intended in some browsers. Add an entry to your hosts file, for example "localhost.localdomain", and use that instead.'), category : 'UserWarning', filename : '/Users/aurimasnausedas/opt/miniconda3/envs/ServicesCommunication/lib/python3.10/site-packages/flask/sessions.py', lineno : 228, line : None}
            nodeid: Tests/tests.py::test_incorrect_response_two
            when: runtest
            location: None
        finish pytest_warning_recorded --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session EventConsumer exitstatus=<ExitCode.TESTS_FAILED: 1> testsfailed=1 testscollected=3>
        exitstatus: 1
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x10f057640>
          exitstatus: 1
          config: <_pytest.config.Config object at 0x10e24b100>
      early skip of rewriting module: pygments [assertion]
        pytest_report_teststatus [hook]
            report: <TestReport 'Tests/tests.py::test_incorrect_response' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0x10e24b100>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x10e24b100>
    finish pytest_unconfigure --> [] [hook]
